%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.9
%%CreationDate: Tue Sep 25 12:05:46 2018
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGGCGACCCUGAUGAGCUUGAGUUUAGCUCGUCACUGUCCAGGUUCAAUCAGGCGAAACGGUGAAAGCCGUAGGUUGCCC\
) def
/coor [
[92.50000000 242.79946899]
[92.50000000 227.79946899]
[92.50000000 212.79946899]
[92.50000000 197.79946899]
[92.50000000 182.79946899]
[92.50000000 167.79946899]
[92.50000000 152.79946899]
[92.50000000 137.79946899]
[81.99064636 134.06922913]
[72.98942566 127.48596954]
[66.25013733 118.60097504]
[62.33713150 108.15829468]
[61.57809448 97.03241730]
[64.03659058 86.15505219]
[69.50673676 76.43709564]
[77.53045654 68.69235229]
[71.32329559 55.03690338]
[65.11613464 41.38146210]
[58.90896988 27.72601700]
[52.70180893 14.07057285]
[46.49464798 0.41512835]
[31.76635933 3.56020784]
[16.70631218 3.46515703]
[2.01889253 0.13442220]
[-11.60894012 -6.27621269]
[-23.53978920 -15.46691036]
[-33.21562576 -27.00780487]
[-40.18389511 -40.35910797]
[-44.11867523 -54.89635468]
[-44.83593369 -69.93961334]
[-42.30212021 -84.78527832]
[-36.63574982 -98.73899841]
[-28.10184097 -111.14813232]
[-17.09954834 -121.43227386]
[-4.14346361 -129.11042786]
[10.16043091 -133.82345581]
[25.14311600 -135.35093689]
[40.10382843 -133.62141418]
[54.34282303 -128.71580505]
[67.19411469 -120.86351776]
[78.05663300 -110.43184662]
[86.42231750 -97.90869141]
[91.89987946 -83.87978363]
[94.23313904 -69.00127411]
[93.31295013 -53.96906281]
[89.18235779 -39.48623657]
[82.03456116 -26.23017693]
[72.20387268 -14.82089806]
[60.15009308 -5.79203272]
[66.35725403 7.86341143]
[72.56441498 21.51885605]
[78.77157593 35.17430115]
[84.97873688 48.82974243]
[91.18589783 62.48518753]
[109.28665161 62.59936523]
[125.33847046 70.96533966]
[135.79978943 85.73730469]
[138.36251831 103.65608978]
[152.73236084 107.95813751]
[167.10220337 112.26018524]
[181.47204590 116.56223297]
[195.84188843 120.86428070]
[211.66552734 116.55793762]
[223.11457825 128.29893494]
[218.41125488 144.00915527]
[202.39392090 147.52725220]
[191.53984070 135.23413086]
[177.16999817 130.93206787]
[162.80015564 126.63002777]
[148.43031311 122.32798004]
[134.06047058 118.02593231]
[123.01230621 130.91088867]
[107.50000000 137.79946899]
[107.50000000 152.79946899]
[107.50000000 167.79946899]
[107.50000000 182.79946899]
[107.50000000 197.79946899]
[107.50000000 212.79946899]
[107.50000000 227.79946899]
[107.50000000 242.79946899]
] def
/pairs [
[1 80]
[2 79]
[3 78]
[4 77]
[5 76]
[6 75]
[7 74]
[8 73]
[16 54]
[17 53]
[18 52]
[19 51]
[20 50]
[21 49]
[58 71]
[59 70]
[60 69]
[61 68]
[62 67]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
