%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.9
%%CreationDate: Tue Sep 25 18:31:32 2018
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGGCGACCCUGAUGAGCUUGGUUUAGUAUUUACAGCUCCAUACAUGAGGUGUUAUCCCUAUGCAAGUUCGAUCAGGCGAAACGGUGAAAGCCGUAGGUUGCCCAGAGACAAU\
) def
/coor [
[119.52832031 211.62004089]
[115.81413269 197.08714294]
[112.09994507 182.55426025]
[108.38575745 168.02137756]
[104.67156982 153.48847961]
[100.95737457 138.95559692]
[97.24318695 124.42271423]
[93.52899933 109.88982391]
[85.96888733 96.93433380]
[75.14344788 86.55118561]
[64.31800842 76.16803741]
[53.49256516 65.78488159]
[42.66712189 55.40173340]
[31.69839668 45.17006302]
[20.58850861 35.09185410]
[9.47861767 25.01364136]
[-1.63127220 14.93542957]
[-12.74116230 4.85721827]
[-23.85105133 -5.22099304]
[-34.96094131 -15.29920483]
[-31.41921234 -0.72332907]
[-31.15023804 14.27425957]
[-34.16703415 28.96775818]
[-40.32360840 42.64608383]
[-49.32201385 54.64728165]
[-60.72677612 64.39055634]
[-73.98596954 71.40438843]
[-88.45791626 75.34934235]
[-103.44226074 76.03451538]
[-118.21383667 73.42673492]
[-132.05778503 67.65221405]
[-144.30413818 58.99039841]
[-154.36021423 47.86048126]
[-161.73939514 34.80108643]
[-166.08453369 20.44421577]
[-167.18537903 5.48466539]
[-164.98861694 -9.35360527]
[-159.60060120 -23.35250664]
[-151.28205872 -35.83456421]
[-140.43556213 -46.19572067]
[-127.58602142 -53.93454742]
[-113.35530090 -58.67653275]
[-98.43206787 -60.19218445]
[-83.53853607 -58.40815735]
[-69.39546967 -53.41078568]
[-56.68731689 -45.44191742]
[-46.02988434 -34.88819504]
[-48.93067169 -49.60503769]
[-51.83145905 -64.32187653]
[-56.62342834 -72.26790619]
[-54.60234451 -79.48783875]
[-65.45766449 -91.77987671]
[-59.98430634 -107.23867035]
[-43.81278992 -109.96154785]
[-33.57898331 -97.14743805]
[-39.81055450 -81.97840881]
[-37.11461639 -67.22266388]
[-34.21382904 -52.50582504]
[-31.31304169 -37.78898239]
[-28.80142975 -35.92965317]
[-26.75118828 -33.31983948]
[-25.38325310 -30.08368874]
[-24.88273048 -26.40909386]
[-13.77284050 -16.33088303]
[-2.66295075 -6.25267172]
[8.44693947 3.82553959]
[19.55682945 13.90375137]
[30.66671944 23.98196220]
[41.77660751 34.06017303]
[48.94586563 36.25426483]
[53.05027390 44.57629395]
[63.87571335 54.95944214]
[74.70115662 65.34259033]
[85.52659607 75.72574615]
[96.35203552 86.10889435]
[95.64986420 71.12534332]
[106.23862457 60.50092316]
[121.22445679 61.15272522]
[130.85076904 72.65638733]
[128.85029602 87.52239227]
[116.52590942 96.07207489]
[131.35089111 98.35678864]
[146.17587280 100.64150238]
[161.00085449 102.92621613]
[175.82583618 105.21092987]
[190.90678406 98.76910400]
[203.86190796 108.82379913]
[201.36407471 125.03160858]
[185.98286438 130.71931458]
[173.54112244 120.03591156]
[158.71614075 117.75119781]
[143.89115906 115.46648407]
[129.06617737 113.18177032]
[114.24119568 110.89705658]
[111.15090942 108.53717804]
[108.06188965 106.17563629]
[111.77607727 120.70852661]
[115.49026489 135.24140930]
[119.20445251 149.77429199]
[122.91864014 164.30718994]
[126.63283539 178.84007263]
[130.34701538 193.37295532]
[134.06120300 207.90583801]
[148.87118530 211.97529602]
[159.65084839 222.91578674]
[163.50051880 237.78439331]
[159.38467407 252.58154297]
[148.41044617 263.32684326]
[133.52984619 267.12991333]
[118.74567413 262.96771240]
[108.03480530 251.95983887]
[104.27841949 237.06738281]
] def
/pairs [
[1 103]
[2 102]
[3 101]
[4 100]
[5 99]
[6 98]
[7 97]
[8 96]
[9 75]
[10 74]
[11 73]
[12 72]
[13 71]
[14 69]
[15 68]
[16 67]
[17 66]
[18 65]
[19 64]
[20 63]
[47 59]
[48 58]
[49 57]
[51 56]
[81 94]
[82 93]
[83 92]
[84 91]
[85 90]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
